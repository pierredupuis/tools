#! /bin/bash

usage() {
	DEF="\e[0;39m"
	BOLD="\e[1m"

	this=$(basename $0)

	printf "%s" "
$(echo -e "${BOLD}SUMMARY${DEF}")
	$this - Automates volatility usage

$(echo -e "${BOLD}USAGE${DEF}")
	$this [-i|--init]
	$this -s|--summary
	$this [-t|--tee] <plugin> <plugin_options>

$(echo -e "${BOLD}DEFINITION${DEF}")
	Relieve the user from having to specify the profile and memory dump file on each volatility command.

	The init argument let you set these options. They will be kept in the following files:
          Memory dump:  .memdump
          Profile:      .profile
	This means the script is directory-specific, it is not possible to remember two different cases stored in a single directory.

$(echo -e "${BOLD}OPTIONS${DEF}")
	-h, --help
		Show this message

	-i, --init [<memorydump_file> [<profile>]]
		Inititalize values for the memory-dump file and the profile.
		***You can either specify them following the argument or the script will prompt for them.
		Any incorrect value will provoke an error when trying to run a plugin.

	-s, --summary [windows|linux|mac]
		Run a selection of plugins and output the result in corresponding files.
		***Plugins are OS-sensitive. By default, windows is used but you can specify linux or mac after the argument to change that.

	<plugin> <plugin_options>
		Get the profile from .profile, the memory dump from .memdump and run the plugin.
		You can give plugin-specific option to add at the end of the volatility command.

	-t, --tee
		When running a plugin, also outputs the results in a file.

*** In Development
"


}

run_plugin() {
	echo "=== Plugin: $1 ==="
	volatility -f "$memdump" --profile "$profile" "$*" > "$1"
	echo
}
run_plugin_d() {
	echo "=== Plugin: $1 ==="
	volatility -f "$memdump" --profile "$profile" "$*" -D "$1"
	echo
}


init(){
	if [ ! -z "$2" ]; then
		memdump=$2
	else
		ls
		read -p "Memory dump file: " memdump
	fi
	volatility -f "$memdump" imageinfo | grep "Suggested"
	read -p "Use profile: " profile

	echo -n "$profile" > ".profile"
	echo -n "$memdump" > ".memdump"
}
summary() {
	run_plugin filescan
	run_plugin pslist
	run_plugin handles
	run_plugin iehistory
	run_plugin hashdump
	if grep -E "(XP|2003)" -q ".profile"; then
		run_plugin connections
		run_plugin sockets
	else
		run_plugin netscan
	fi
	run_plugin truecryptsummary
	run_plugin devicetree
	run_plugin_d evtlogs
}
cmd() {
	echo "volatility -f $memdump --profile $profile $*"
	volatility -f "$memdump" --profile "$profile" $*
}

cmdtee() {
	echo "volatility -f $memdump --profile $profile $* | tee $1"
	volatility -f "$memdump" --profile "$profile" $* | tee $1
}
if [ -f ".profile" ]; then
	profile=$(cat ".profile")
fi
if [ -f ".memdump" ]; then
	memdump=$(cat ".memdump")
fi

case $1 in
	-h|--help)
		usage;
		exit 0
		;;
	-i|--init) init ;;
	-s|--summary) summary ;;
	-t|--tee)
		shift;
		cmdtee $*
		;;
	*) cmd $* ;;
esac
